I"a<blockquote>
  <p>接上篇 <a href="https://oragekk.me/08-25-2019/react1.html">ReactNative 认知（一）</a></p>
</blockquote>

<h2 id="创建reactnative项目">创建ReactNative项目</h2>

<h4 id="环境配置">环境配置</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn add <span class="nt">--dev</span> typescript
yarn add <span class="nt">--dev</span> react-native-typescript-transformer
yarn tsc <span class="nt">--init</span> <span class="nt">--pretty</span> <span class="nt">--jsx</span> react-native
<span class="nb">touch </span>rn-cli.config.js
yarn add <span class="nt">--dev</span> @types/react @types/react-native
</code></pre></div></div>

<h4 id="配置rn-cliconfigjs">配置rn-cli.config.js</h4>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">module.exports</span><span class="w"> </span><span class="err">=</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">getTransformModulePath()</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">return</span><span class="w"> </span><span class="err">require.resolve(</span><span class="s2">"react-native-typescript-transformer"</span><span class="err">);</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="err">getSourceExts()</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">return</span><span class="w"> </span><span class="p">[</span><span class="s2">"ts"</span><span class="p">,</span><span class="w"> </span><span class="s2">"tsx"</span><span class="p">]</span><span class="err">;</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="err">;</span><span class="w">
</span></code></pre></div></div>

<h4 id="create-our-new-project">Create our new project</h4>

<p><code class="highlighter-rouge">react-native init AwesomeProject</code></p>

<p><code class="highlighter-rouge">cd AwesomeProject
react-native run-ios</code></p>

<h4 id="项目结构图">项目结构图</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>my-app/
├─ .gitignore
├─ images.d.ts
├─ node_modules/
├─ public/
├─ src/
│  └─ ...
├─ package.json
├─ tsconfig.json
├─ tsconfig.prod.json
├─ tsconfig.test.json
└─ tslint.json
</code></pre></div></div>

<ul>
  <li><code class="highlighter-rouge">tsconfig.json</code> 包含我们项目的TypeScript特定选项。</li>
  <li><code class="highlighter-rouge">package.json</code> 包含我们的依赖项，以及我们想要运行的命令的一些快捷方式，用于测试，预览和部署我们的应用程序。</li>
  <li><code class="highlighter-rouge">public</code>包含静态资产，例如我们计划部署到的HTML页面或图像。您可以删除此文件夹中的任何文件<code class="highlighter-rouge">index.html</code>。</li>
  <li><code class="highlighter-rouge">src</code>包含我们的TypeScript和CSS代码。<code class="highlighter-rouge">index.tsx</code>是我们文件的入口点，并且是强制性的。</li>
  <li><code class="highlighter-rouge">images.d.ts</code>将告诉TypeScript可以使用某些类型的图像文件<code class="highlighter-rouge">import</code>，create-react-app支持这些文件。</li>
</ul>

<h4 id="添加typescript配置文件">添加TypeScript配置文件</h4>

<p>我们想将TypeScript文件整合到一起 - 这包括我们写的源码和必要的声明文件。</p>

<p>我们需要创建一个<code class="highlighter-rouge">tsconfig.json</code>文件，它包含了输入文件列表以及编译选项。 在工程根目录下新建文件<code class="highlighter-rouge">tsconfig.json</code>文件，添加以下内容：</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"compilerOptions"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"outDir"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./dist/"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"sourceMap"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
        </span><span class="nl">"noImplicitAny"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
        </span><span class="nl">"module"</span><span class="p">:</span><span class="w"> </span><span class="s2">"commonjs"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"target"</span><span class="p">:</span><span class="w"> </span><span class="s2">"es5"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"jsx"</span><span class="p">:</span><span class="w"> </span><span class="s2">"react"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"include"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="s2">"./src/**/*"</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>你可以在<a href="https://www.tslang.cn/docs/handbook/tsconfig-json.html">这里</a>了解更多关于<code class="highlighter-rouge">tsconfig.json</code>文件的说明。</p>

<h4 id="运行">运行</h4>

<p><code class="highlighter-rouge">npm run start</code></p>

<p><code class="highlighter-rouge">npm run test</code></p>

<h2 id="组件">组件</h2>

<p>示例代码</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">Component</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Text</span><span class="p">,</span> <span class="nx">View</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorldApp</span> <span class="kd">extends</span> <span class="nx">Component</span> <span class="p">{</span>
  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span>
        <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
          <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">Hello</span><span class="p">,</span> <span class="nx">world</span><span class="o">!&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>    <span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>示例中的这一行<code class="highlighter-rouge">&lt;View&gt;&lt;Text&gt;Hello world!&lt;/Text&gt;&lt;/View&gt;</code>恐怕很多人看起来也觉得陌生。这叫做 JSX——是一种在 JavaScript 中嵌入 XML 结构的语法。很多传统的应用框架会设计自有的模板语法，让你在结构标记中嵌入代码。React 反其道而行之，设计的 JSX 语法却是让你在代码中嵌入结构标记。初看起来，这种写法很像 web 上的 HTML，只不过使用的并不是 web 上常见的标签如<code class="highlighter-rouge">&lt;div&gt;</code>或是<code class="highlighter-rouge">&lt;span&gt;</code>等，这里我们使用的是 React Native 的组件。上面的示例代码中，使用的是内置的<code class="highlighter-rouge">&lt;Text&gt;</code>组件，它专门用来显示文本，而<code class="highlighter-rouge">&lt;View&gt;</code>就类似 html 中的<code class="highlighter-rouge">div</code>或是<code class="highlighter-rouge">span</code>这样的容器。</p>

<p>上面的代码定义了一个名为<code class="highlighter-rouge">HelloWorldApp</code>的新的<code class="highlighter-rouge">组件（Component）</code>。你在编写 React Native 应用时，肯定会写出很多新的组件。而一个 App 的最终界面，其实也就是各式各样的组件的组合。组件本身结构可以非常简单——唯一必须的就是在<code class="highlighter-rouge">render</code>方法中返回一些用于渲染结构的 JSX 语句。</p>

<h2 id="props属性">Props（属性）</h2>

<p>大多数组件在创建时就可以使用各种参数来进行定制。用于定制的这些参数就称为<code class="highlighter-rouge">props</code>（属性）。</p>

<p>以常见的基础组件<code class="highlighter-rouge">Image</code>为例，在创建一个图片时，可以传入一个名为<code class="highlighter-rouge">source</code>的 prop 来指定要显示的图片的地址，以及使用名为<code class="highlighter-rouge">style</code>的 prop 来控制其尺寸。</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">Component</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Image</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">Bananas</span> <span class="kd">extends</span> <span class="nx">Component</span> <span class="p">{</span>
  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">pic</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">uri</span><span class="p">:</span> <span class="dl">'</span><span class="s1">https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg</span><span class="dl">'</span>
    <span class="p">};</span>
    <span class="k">return</span> <span class="p">(</span>
      <span class="o">&lt;</span><span class="nx">Image</span> <span class="nx">source</span><span class="o">=</span><span class="p">{</span><span class="nx">pic</span><span class="p">}</span> <span class="nx">style</span><span class="o">=</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<p>请注意<code class="highlighter-rouge">{pic}</code>外围有一层括号，我们需要用括号来把<code class="highlighter-rouge">pic</code>这个变量嵌入到 JSX 语句中。括号的意思是括号内部为一个 js 变量或表达式，需要执行后取值。因此我们可以把任意合法的 JavaScript 表达式通过括号嵌入到 JSX 语句中。</p>

<p>使用的时候像这样<code class="highlighter-rouge">this.props</code>，请注意一点，在自定义组件内部，由外部传入的props的属性均为<strong>readonly（只读）</strong>不可在组件内部修改</p>

<h2 id="es6-props使用解构赋值">ES6 props使用解构赋值</h2>

<p>组件内部赋值是这样的</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span>
            <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="p">.</span><span class="nx">ri_item</span><span class="p">}</span><span class="o">&gt;</span>
                <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="p">.</span><span class="nx">ri_line</span><span class="p">}</span><span class="o">&gt;&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>                <span class="p">{</span><span class="cm">/* 中间部分 */</span><span class="p">}</span>
                <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="p">.</span><span class="nx">ri_item_center</span><span class="p">}</span><span class="o">&gt;</span>
                    <span class="o">&lt;</span><span class="nx">BidderView</span>
                        <span class="nx">bidderHeadImg</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">bidderHeadImg</span><span class="p">}</span>
                        <span class="nx">bidderName</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">bidderName</span><span class="p">}</span>
                        <span class="nx">targetName</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">targetName</span><span class="p">}</span>
                    <span class="sr">/</span><span class="err">&gt;
</span>                <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>
                <span class="p">{</span><span class="cm">/* 尾部按钮 */</span><span class="p">}</span>
                <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
                    <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">recordOpinionButton</span><span class="p">()}</span>
                    <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">recordButton</span><span class="p">()}</span>
                <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>            <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>        <span class="p">);</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>而使用解构赋值之后是这样的</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="p">{</span><span class="nx">bidderHeadImg</span><span class="p">,</span><span class="nx">bidderName</span><span class="p">,</span><span class="nx">targetName</span><span class="p">}</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span>
        <span class="k">return</span> <span class="p">(</span>
            <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="p">.</span><span class="nx">ri_item</span><span class="p">}</span><span class="o">&gt;</span>
                <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="p">.</span><span class="nx">ri_line</span><span class="p">}</span><span class="o">&gt;&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>                <span class="p">{</span><span class="cm">/* 中间部分 */</span><span class="p">}</span>
                <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="p">.</span><span class="nx">ri_item_center</span><span class="p">}</span><span class="o">&gt;</span>
                    <span class="o">&lt;</span><span class="nx">BidderView</span>
                        <span class="nx">bidderHeadImg</span><span class="o">=</span><span class="p">{</span><span class="nx">bidderHeadImg</span><span class="p">}</span>
                        <span class="nx">bidderName</span><span class="o">=</span><span class="p">{</span><span class="nx">bidderName</span><span class="p">}</span>
                        <span class="nx">targetName</span><span class="o">=</span><span class="p">{</span><span class="nx">targetName</span><span class="p">}</span>
                    <span class="sr">/</span><span class="err">&gt;
</span>                <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>
                <span class="p">{</span><span class="cm">/* 尾部按钮 */</span><span class="p">}</span>
                <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
                    <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">recordOpinionButton</span><span class="p">()}</span>
                    <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">recordButton</span><span class="p">()}</span>
                <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>            <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>        <span class="p">);</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="es6-延展操作符">ES6 延展操作符（…）</h2>

<h4 id="该运算符主要用于函数调用">该运算符主要用于函数调用</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">push</span><span class="p">(</span><span class="nx">array</span><span class="p">,</span> <span class="p">...</span><span class="nx">items</span><span class="p">)</span> <span class="p">{</span>
<span class="nx">array</span><span class="p">.</span><span class="nx">push</span><span class="p">(...</span><span class="nx">items</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">add</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
<span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">38</span><span class="p">];</span>
<span class="nx">add</span><span class="p">(...</span><span class="nx">numbers</span><span class="p">)</span> <span class="c1">// 42</span>
</code></pre></div></div>

<h4 id="对象的扩展运算">对象的扩展运算</h4>

<ul>
  <li><strong>拷贝对象</strong></li>
</ul>

<p>对象的扩展运算符（…）用于取出参数对象的所有可遍历属性，拷贝到当前对象之中。</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">z</span> <span class="o">=</span> <span class="p">{</span> <span class="na">a</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="na">b</span><span class="p">:</span> <span class="mi">4</span> <span class="p">};</span>
<span class="kd">let</span> <span class="nx">n</span> <span class="o">=</span> <span class="p">{</span> <span class="p">...</span><span class="nx">z</span> <span class="p">};</span>
<span class="nx">n</span> <span class="c1">// { a: 3, b: 4 }</span>
</code></pre></div></div>

<ul>
  <li><strong>合并对象</strong></li>
</ul>

<p>扩展运算符可以用于合并两个对象。</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">ab</span> <span class="o">=</span> <span class="p">{</span> <span class="p">...</span><span class="nx">a</span><span class="p">,</span> <span class="p">...</span><span class="nx">b</span> <span class="p">};</span>
<span class="c1">// 等同于</span>
<span class="kd">let</span> <span class="nx">ab</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">({},</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">);</span>
</code></pre></div></div>

<h4 id="用于props要求参数名一致此处用法其实是对copy对象的一种应用">用于props，要求参数名一致，此处用法其实是对copy对象的一种应用</h4>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">Component</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Image</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">Bananas</span> <span class="kd">extends</span> <span class="nx">Component</span> <span class="p">{</span>
  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">parameter</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">uri</span><span class="p">:</span> <span class="dl">'</span><span class="s1">https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">title</span><span class="p">:</span><span class="dl">'</span><span class="s1">HelloWorld</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">message</span><span class="p">:</span><span class="dl">'</span><span class="s1">Nice to meet you</span><span class="dl">'</span>
    <span class="p">};</span>
    <span class="k">return</span> <span class="p">(</span>
      <span class="o">&lt;</span><span class="nx">ModalAlert</span> <span class="p">{...</span><span class="nx">parameter</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<hr />

<p>参考资料：</p>

<p><a href="https://reactnative.cn/docs/layout-props/#justifycontent">官方文档</a></p>

<p><a href="https://www.jianshu.com/p/ae0a9ec1f8d6?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">ES6 延展操作符（…）</a></p>

<p><a href="https://www.tslang.cn/docs/home.html">typeScriptg中文文档</a></p>

<p><a href="https://www.imooc.com/video/14286">ReactNative入门与进阶</a></p>

<p><a href="[https://docs.nativebase.io](https://docs.nativebase.io/)">https://docs.nativebase.io </a></p>

:ET